# Максимум в таблице
# На вход программе подаются два натуральных числа nn и mm — количество строк и столбцов в матрице, затем nn строк по mm целых чисел в каждой, отделенных символом пробела.

# Напишите программу, которая находит индексы (строку и столбец) первого вхождения максимального элемента.

# Формат входных данных
# На вход программе на разных строках подаются два числа nn и mm — количество строк и столбцов в матрице, затем сами элементы матрицы построчно через пробел.

# Формат выходных данных
# Программа должна вывести два числа: номер строки и номер столбца, в которых стоит наибольший элемент таблицы. Если таких элементов несколько, то выводится тот, у которого меньше номер строки, а если номера строк равны то тот, у которого меньше номер столбца.

# Примечание. Считайте, что нумерация строк и столбцов начинается с нуля.

# Тестовые данные 🟢
# Sample Input 1:

# 3
# 4
# 0 3 2 4
# 2 3 5 5
# 5 1 2 3
# Sample Output 1:

# 1 2
# Sample Input 2:

# 3
# 3
# 5 3 4
# 2 3 0
# 4 1 5
# Sample Output 2:

# 0 0
# Sample Input 3:

# 2
# 8
# 4 3 4 4 1 2 2 3
# 2 3 0 3 3 4 4 5
# Sample Output 3:

# 1 7
# Sample Input 4:

# 6
# 8
# -4 -3 -4 -4 -1 -8 -2 -3
# -2 -3 -9 -7 -3 -4 -4 -5
# -4 -3 -4 -4 -1 -2 -2 -3
# -2 -3 -9 -3 -3 -1 -4 -5
# -5 -3 -4 -4 -1 -2 -2 -3
# -2 -3 -7 -8 -3 -4 -4 -5
# Sample Output 4:

# 0 4


n, m = int(input()), int(input())
matrix = [[int(i) for i in input().split()] for _ in range(n)]
x, y = 0, 0
for i in range(n):
  for j in range(m):
    if matrix[i][j] > matrix[x][y]:
      x, y = i, j
print(x, y)