# –í–Ω—É—Ç—Ä–∏ —à–∞—Ä–∞
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ —Å –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∞–±—Å—Ü–∏—Å—Å (xx), –æ—Ä–¥–∏–Ω–∞—Ç (yy) –∏ –∞–ø–ø–ª–∏–∫–∞—Ç (zz) —Ç–æ—á–µ–∫ —Ç—Ä–µ—Ö–º–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ—á–µ–∫ —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ –ª–∏–±–æ –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —à–∞—Ä–∞ —Å —Ü–µ–Ω—Ç—Ä–æ–º –≤ –Ω–∞—á–∞–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏ —Ä–∞–¥–∏—É—Å–æ–º R = 2R =2.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞ —Å –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞ ‚Äì –∞–±—Å—Ü–∏—Å—Å—ã, –æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –∞–ø–ø–ª–∏–∫–∞—Ç—ã —Ç–æ—á–µ–∫ –≤ —Ç—Ä–µ—Ö–º–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ True –µ—Å–ª–∏ –≤—Å–µ —Ç–æ—á–∫–∏ —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∏–ª–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ —à–∞—Ä–∞ –∏ False, –µ—Å–ª–∏ –≤–Ω–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤–æ –≤—Å–µ—Ö —Ç—Ä–µ—Ö —Å—Ç—Ä–æ–∫–∞—Ö –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –£—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —à–∞—Ä–∞ (—Å—Ñ–µ—Ä—ã) –∏–º–µ–µ—Ç –≤–∏–¥ x^2+y^2+z^2 = R^2x 
# 2
#  +y 
# 2
#  +z 
# 2
#  =R 
# 2
#  .

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ all() –∏ zip().

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è abscissas, ordinates, applicates –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 5. –£–∫–∞–∑–∞–Ω–Ω—ã–π —à–∞—Ä –∏–º–µ–µ—Ç –≤–∏–¥:



# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:

# 0.0 1.0 2.0
# 0.0 0.0 1.1
# 0.0 1.0 1.5
# Sample Output 1:

# False
# Sample Input 2:

# 0.0 0.0
# 1.5 0.0
# 1.1 1.1
# Sample Output 2:

# True
# Sample Input 3:

# 0.637 -0.411 -0.247 1.658 0.061
# -0.78 -1.374 0.762 0.306 -0.614
# -1.317 -0.444 -0.572 -0.341 0.295
# Sample Output 3:

# True


abscissas = [float(i) for i in input().split()]
ordinates = [*map(float, input().split())]
applicates = [*map(float, input().split())]
dots = zip(abscissas, ordinates, applicates)
print(all(map(lambda dot: dot[0]**2 + dot[1]**2 + dot[2]**2 <= 4, dots)))
