# –ó–Ω–∞—á–µ–Ω–∏–µ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞ üå∂Ô∏è
# –ú–Ω–æ–≥–æ—á–ª–µ–Ω–æ–º —Å—Ç–µ–ø–µ–Ω–∏ nn –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤–∏–¥–∞ 
# a_nx^n + a_{n-1}x^{n-1}+\ldots + a_2x^2+a_1x+a_0
# a 
# n
# ‚Äã
#  x 
# n
#  +a 
# n‚àí1
# ‚Äã
#  x 
# n‚àí1
#  +‚Ä¶+a 
# 2
# ‚Äã
#  x 
# 2
#  +a 
# 1
# ‚Äã
#  x+a 
# 0
# ‚Äã
 
# –≥–¥–µ a_n, \, a_{n-1}, \ldots , a_2, \, a_1,\, a_0a 
# n
# ‚Äã
#  ,a 
# n‚àí1
# ‚Äã
#  ,‚Ä¶,a 
# 2
# ‚Äã
#  ,a 
# 1
# ‚Äã
#  ,a 
# 0
# ‚Äã
#   ‚Äî –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞ (a_n \neq 0a 
# n
# ‚Äã
 
# ÓÄ†
# =0).

# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞ –∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ xx –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞ –ø—Ä–∏ –∑–∞–¥–∞–Ω–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ xx.

# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞ (—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞), —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞ –∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ xx –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ.

# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞ –ø—Ä–∏ –∑–∞–¥–∞–Ω–Ω–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ xx.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü–µ—Ä–≤—ã–π —Ç–µ—Å—Ç –∑–∞–¥–∞–µ—Ç –º–Ω–æ–≥–æ—á–ª–µ–Ω 2x^2+4x+32x 
# 2
#  +4x+3, –≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç –∑–∞–¥–∞–µ—Ç –º–Ω–æ–≥–æ—á–ª–µ–Ω x^6+2x^5+3x^4+4x^3+5x^2+6x+7x 
# 6
#  +2x 
# 5
#  +3x 
# 4
#  +4x 
# 3
#  +5x 
# 2
#  +6x+7.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –≤–∏–¥–µ —Ñ—É–Ω–∫—Ü–∏–∏ evaluate(coefficients, x), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞. –§—É–Ω–∫—Ü–∏—è evaluate() –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π map() –∏ reduce().

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é evaluate(), —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç üòÄ.

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:

# 2 4 3
# 10
# Sample Output 1:

# 243
# Sample Input 2:

# 1 2 3 4 5 6 7
# 1
# Sample Output 2:

# 28
# Sample Input 3:

# -2 4 5
# 3
# Sample Output 3:

# -1
# Sample Input 4:

# 10
# 2
# Sample Output 4:

# 10
# Sample Input 5:

# 3 19
# 10
# Sample Output 5:

# 49


from functools import reduce

def evaluate(coefficients, x):
    l = list(map(lambda a, p: a * x**p, coefficients, range(len(coefficients))[::-1]))
    return reduce(lambda a, b: a + b, l)

print(evaluate(list(map(int, input().split())), int(input())))
